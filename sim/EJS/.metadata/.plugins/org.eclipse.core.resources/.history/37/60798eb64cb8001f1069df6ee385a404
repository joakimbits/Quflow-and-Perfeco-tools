/**
 *
 * <p>Title: JOPAS</p>
 *
 * <p>Description: Java to Octave</p>
 *
 * <p>Copyright: (C) Copyright 2000-2005, by Object Refinery Limited and
 * Contributors.
 *
 * Project Info:  	http://jopas.sourceforge.net
 *                      http://www.eside.deusto.es/grupos/eside_pas
 *
 * This library is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 2.1 of the License, or
 * (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public
 * License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this library; if not, write to the Free Software Foundation,
 * Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.
 *
 * [Java is a trademark or registered trademark of Sun Microsystems, Inc.
 * in the United States and other countries.]
 * </p>
 *
 * <p>Company: PAS - Universidad de Deusto</p>
 *
 * @author Oscar Lage Serrano - Javier Vicente Sáez
 * @version 1.01
 */

package demo.jopas;

import org.jopas.*;

public class Example3 {
    

    /**
     * The constructor of the class have to start joPAS to run Octave because
     * Octave program takes a long time to start
     */
    public Example3() {
        Jopas jopas = new Jopas(); //joPAS inicialitation

        double[] aA= {1,2,3,4};
        Matrix mA= new Matrix (aA,"vA");
        jopas.Load(mA);

        double[] aB= {5,3,8,1};
        Matrix mB= new Matrix (aB,"vB");
        jopas.Load(mB);

        jopas.Execute("vY=vA+vB");

        Matrix mY = jopas.Save("vY");

        String smY = mY.toString();
        System.out.println(smY);

        System.exit(0);
    }

  public static void main(String av[]) {

        Example3 example3 = new Example3();

    }
}

